"""init

Revision ID: 7bce29726fa0
Revises: 
Create Date: 2023-12-22 22:03:50.494693

"""
import sqlalchemy as sa
import sqlmodel  # NEW
from alembic import op

# revision identifiers, used by Alembic.
revision = "7bce29726fa0"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_user",
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("password", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_index(op.f("ix_auth_user_id"), "auth_user", ["id"], unique=False)
    op.create_table(
        "auth_refresh_token",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("token_value", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column(
            "issued_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "is_revoked",
            sa.Boolean(),
            server_default=sa.text("(false)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "is_deleted",
            sa.Boolean(),
            server_default=sa.text("(false)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_auth_refresh_token_id"), "auth_refresh_token", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_auth_refresh_token_is_deleted"),
        "auth_refresh_token",
        ["is_deleted"],
        unique=False,
    )
    op.create_index(
        op.f("ix_auth_refresh_token_user_id"),
        "auth_refresh_token",
        ["user_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_auth_refresh_token_user_id"), table_name="auth_refresh_token"
    )
    op.drop_index(
        op.f("ix_auth_refresh_token_is_deleted"), table_name="auth_refresh_token"
    )
    op.drop_index(op.f("ix_auth_refresh_token_id"), table_name="auth_refresh_token")
    op.drop_table("auth_refresh_token")
    op.drop_index(op.f("ix_auth_user_id"), table_name="auth_user")
    op.drop_table("auth_user")
    # ### end Alembic commands ###
